


/*

█████████████████████ cela.js

██ https://github.com/jasonhargrove/cela

*/


// Init

module.exports = function ( moda, cela ) {



  // REMINDER // moda == users module

              // cela == top level app


  // ██████████================ ROUTES
  // ██████████===========================

  

  // NOTE // COMMON VIEW ARGUMENTS TO BE AUTOMATED 

  // // for now, manually passing app_name into views

  var app_name = cela.options.name.replace( /_/g, ' ' );




  // ██████████================ AUTO REGISTRY


  return [{

    name: 'User Login Page',
    type: 'get',
    path: '/account/login',
    method: function ( req, res ) {

      // If user logged in, redirect to account

      if ( req.user != undefined ) {

        res.redirect( '/account' );

        return

      }


      // Passport options

      // // Used to determine login auth field type

      var passport_options = moda.moda.users_passport.options;


      // Render

      var heading = 'Account Login';

      res.render( './views/views_users_account_login', {

        site_name: app_name,

        title: app_name + ' - ' + heading,

        heading: heading,

        identity_field: passport_options.identity_field,

        identity_fieldname: passport_options.identity_fieldname,

        error: req.flash( 'error' ),

        message: req.flash( 'message' )

      });

    }

  },{

    name: 'User Login Page - POST',
    type: 'post',
    path: '/account/login',

    middle_method: moda.moda.users_passport.passport.authenticate(

      'local',

      {
        failureRedirect: '/account/login',
        failureFlash: true
      }

    ),

    method: function ( req, res ) {

      res.redirect( '/account' )

    }

  },{

    name: 'User Login Page Shortcut',
    type: 'get',
    path: '/login',
    method: function ( req, res ) {
      res.redirect( '/account/login' )
    }

  },{

    name: 'User Page',
    type: 'get',
    path: '/account',

    middle_method: cela.moda.role.is( 'authenticated' ),

    method: function ( req, res ) {

      var heading = 'Account';

      res.render( './views/views_users_account', {

        site_name: app_name,
        title: app_name + ' - ' + heading,
        heading: heading,
        user: req.user

      });

    }

  },{

    name: 'User Password Reset (GET)',
    type: 'get',
    path: '/account/password/reset',
    method: function ( req, res ) {
      var heading = 'Password Reset';
      res.render( './views/views_users_password_reset.jade', {
        site_name: app_name,
        heading: heading,
        title: app_name + ' - ' + heading
      });
    }

  },{


    name: 'User Password Reset (POST)',
    type: 'post',
    path: '/account/password/reset',
    method: function ( req, res ) {
      moda.account_password_reset( req, res, {
        fail_view: './views/views_users_password_reset.jade',
        success_message: 'Email has been sent. Please check your email and then login.'
      });
    }

  },{

    name: 'User Password Set (GET)',
    type: 'get',
    path: '/account/password/set/:email',
    method: function ( req, res ) {
      moda.password_set( req, res, {
        view: './views/views_users_password_set'
      });
    }

  },{

    name: 'User Password Set (POST)',
    type: 'post',
    path: '/account/password/set/:email',
    method: function ( req, res ) {
      moda.password_set_post( req, res, {
        fail_view: './views/views_users_password_set',
        success_message: 'Password has been saved. Please login.'
      });
    }

  },{

    name: 'User Logout Page',
    type: 'get',
    path: '/account/logout',
    method: function ( req, res ) {
      req.logout();
      res.redirect( '/account/login' );
    }

  },{

    name: 'User Logout Page Shortcut',
    type: 'get',
    path: '/logout',
    method: function ( req, res ) {
      res.redirect( '/account/logout' )
    }

  },{

    name: 'Admin - Users List',
    type: 'get',
    path: '/admin/users',

    middle_method: cela.moda.role.is( 'sysa' ),

    method: function ( req, res ) {

      moda.read( null, function ( err, users ) {

        var heading = 'Users List';

        res.render( './views/views_users_admin_users_list', {

          site_name: app_name,
          title: app_name + ' - ' + heading,
          heading: heading,
          user: req.user,
          users: users,
          form_table_delete: true

        });


      });

    }

  },{

    name: 'Admin - Users Delete',
    type: 'post',
    path: '/admin/users',

    middle_method: cela.moda.role.is( 'sysa' ),

    method: function ( req, res ) {

      cela.moda.signals.delete({

        db_type: 'mongo',
        model_type: 'users',
        document: {
          _id: req.body._id
        }

      }, function ( err ) {

        res.redirect( req.url );

      });

    }

  },{

    name: 'Admin - Users New',
    type: 'get',
    path: '/admin/users/new',

    middle_method: cela.moda.role.is( 'sysa' ),

    method: function ( req, res ) {


      var heading = 'User Create';

      res.render( './views/views_users_admin_users_new', {

        site_name: app_name,
        title: app_name + ' - ' + heading,
        heading: heading,
        user: req.user,
        error: req.flash( 'error' ),
        message: req.flash( 'message' )

      })

    }

  },{

    name: 'Admin - Users New (POST)',
    type: 'post',
    path: '/admin/users/new',
    middle_method: cela.moda.role.is( 'sysa' ),
    method: function ( req, res ) {

      moda.route_user_new( req, res, {

        fail_redirect: '/admin/users/new'

      });

    }

  }];



};







